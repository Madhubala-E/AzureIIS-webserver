 {
    "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "resourceGroup": {
            "type": "string",
            "defaultValue": "friday3"
        },
        "resourcePrefix": {
            "type": "string",
            "defaultValue": "friday"
        },
        "resourceSuffix": {
            "type": "string",
            "defaultValue": "3"
        },
        "location": {
            "type": "string",
            "defaultValue": "eastus"
        },
        "virtualMachineSize": {
            "type": "string",
            "defaultValue": "Standard_B2S"
        },
        "adminUsername": {
            "type": "string",
            "defaultValue": "gavsadmin"
        },
        "adminPassword": {
            "type": "securestring",
            "minLength": 8,
            "maxLength": 32
        },
        "addressPrefix": {
            "type": "string",
            "defaultValue": "10.0.0.0/16"
        },
        "subnetPrefix": {
            "type": "string",
            "defaultValue": "10.0.0.0/24"
        },
        "publicIpAddressType": {
            "type": "string",
            "defaultValue": "Dynamic"
        },
        "publicIpAddressSku": {
            "type": "string",
            "defaultValue": "Basic"
        },
        "vmTimeZone": {
            "type": "string",
            "defaultValue": "UTC"
        },
        "vmOSPubkeys": {
            "type": "string",
            "defaultValue": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDNddFVsi0eW50UFgRZdnXJbqqK7TKUNJbWKzfGLiFoYV1+wvZJo6B3L6g4wChehAS2rUA0+nBM4NCI9nWyL4etlC61cMBLkNiEjzAQr4V6BpCLChIdtK2BobAlgGCaznLV424AO8GmGp72fSR58ZhbginisIaB+6S2QhlmuD8xHTFS9VNFQ53B2aW/SWlZz0RXmFN7hf2aHr0xdZGxxqyT2dZ5t3AeIyck/W0Gbv6yBg0NmS1b8q2uj9o3nxAphjbLXSfq2hFegXJi2xxXNNxv/RGvks3EcPYdbCv8DTtA9bgqygyHKzgPTWFlF8Wd4w/vNIYcPRX3vzJFqDLwLZVn piyush@200411LTP0359"
        },
        "vmImagePublisher": {
            "type": "string",
            "defaultValue": "MicrosoftWindowsServer"
        },
        "vmImageOffer": {
            "type": "string",
            "defaultValue": "WindowsServer"
        },
        "vmImageSKU": {
            "type": "string",
            "defaultValue": "2016-Datacenter"
        },
        "vmImageVersion": {
            "type": "string",
            "defaultValue": "latest"
        },
        "extnPublisher": {
            "type": "string",
            "defaultValue": "Microsoft.Compute"
        },
        "extnType": {
            "type": "string",
            "defaultValue": "CustomScriptExtension"
        },
        "extnTypeVersion": {
            "type": "string",
            "defaultValue": "1.9"
        },
        "scriptFileURI": {
            "type": "string",
            "defaultValue": "https://kpteststorage1.blob.core.windows.net/windows-powershell-script-new/windows-powershell-script-new.ps1"
        },
        "scriptFileParams": {
            "type": "string",
            "defaultValue": "-InstallGooglechrome true"
        },
        "cmdExecutePrefix": {
            "type": "string",
            "defaultValue": "powershell -ExecutionPolicy Unrestricted -File"
        },
        "enableAvailabilitySet": {
            "type": "string",
            "allowedValues": [
                "Yes",
                "No"
            ],
            "defaultValue": "Yes",
            "metadata": {
                "description": "Select whether the VM should be in Availability Set or not."
            }
        },
        "ManagedDisks": {
            "type": "string",
            "allowedValues": [
                "Yes",
                "No"
            ],
            "defaultValue": "No",
            "metadata": {
                "description": "Enable or Disable managed disk"
            }
        },
        "storageAccountType": {
            "type": "string",
            "allowedValues": [
                "Standard_LRS",
                "Standard_GRS",
                "Standard_RAGRS",
                "Standard_ZRS"
            ],
            "defaultValue": "Standard_LRS",
            "metadata": {
                "description": "Storage Account Type : Standard-LRS, Standard-GRS,Standard-RAGRS,Standard-ZRS"
            }
        },
        "storageAccountKind": {
            "type": "string",
            "defaultValue": "Storage"
        },
        "diskType": {
            "type": "string",
            "defaultValue": "Standard_LRS",
            "allowedValues": [
                "StandardSSD_LRS",
                "Standard_LRS",
                "Premium_LRS"
            ],
            "metadata": {
                "description": "The Storage type of the data Disks"
            }
        },
        "vmNetworkSecurityRules": {
            "type": "object",
            "defaultValue": {
                "securityRules": [
                    {
                        "name": "RDP",
                        "properties": {
                            "priority": 300,
                            "protocol": "Tcp",
                            "access": "Allow",
                            "direction": "Inbound",
                            "sourceApplicationSecurityGroups": [],
                            "destinationApplicationSecurityGroups": [],
                            "sourceAddressPrefix": "*",
                            "sourcePortRange": "*",
                            "destinationAddressPrefix": "*",
                            "destinationPortRange": "3389"
                        }
                    },
                    {
                        "name": "SSH",
                        "properties": {
                            "priority": 310,
                            "protocol": "Tcp",
                            "access": "Allow",
                            "direction": "Inbound",
                            "sourceApplicationSecurityGroups": [],
                            "destinationApplicationSecurityGroups": [],
                            "sourceAddressPrefix": "*",
                            "sourcePortRange": "*",
                            "destinationAddressPrefix": "*",
                            "destinationPortRange": "22"
                        }
                    }
                ]
            }
        },
        "virtualMachineName": {
             "type": "string",
             "defaultValue": "[concat(parameters('resourcePrefix'), parameters('resourceSuffix'), '-vm')]"
        },
        "storageAccountName": {
            "type": "string",
            "defaultValue": "[toLower(concat(parameters('resourcePrefix'), parameters('resourceSuffix'), 'strg'))]"
        },
        "storageContainerUri": {
             "type": "string",
             "defaultValue": "[concat(concat('https://', parameters('storageAccountName'), '.blob.core.windows.net/'), 'vhds/')]"
        },
        "existingVnetResourceGroupName": {
            "type": "string",
            "defaultValue": "winrmvm6oT-rg",
            "metadata": {
                "description": "Name of the resourceGroup for the existing virtual network to deploy the scale set into."
            }
        },
        "existingVnetName": {
            "type": "string",
            "defaultValue": "winrmvm6oT-vnet",
            "metadata": {
                "description": "vName of the existing virtual network to deploy the scale set into."
            }
        },
        "existingVirtualNetworkSubnet": {
            "type": "string",
            "defaultValue": "winrmvm6oT-subnet"
        },
        "existingNetwork": {
            "type": "string",
            "allowedValues": [
                "true",
                "false"
            ],
            "defaultValue": "false"
        },
        "enablePublicIP": {
            "type": "string",
            "allowedValues": [
                "Yes",
                "No"
            ],
            "defaultValue": "Yes",
            "metadata": {
                "description": "Select whether the Public IP should be enabled or not."
            }
        },
        "dataDiskSize": {
            "type": "int",                                 
             "minValue": 1,
             "maxValue": 1024,                                                     
            "defaultValue": 100,
            "metadata": {
                "description": "Size of the Data Disk"
            }
        },
        "osType": {
            "type": "string",
            "allowedValues": [
                "Windows",
                "Linux"
            ],
            "defaultValue": "Windows"
        },
        "dataDisksManaged": {
            "type": "array",
            "defaultValue":  [                 
                    {
                        "name": "[concat(parameters('virtualMachineName'),'_datadisk')]",                                
                        "caching": "None",
                        "createOption": "Empty",
                        "diskSizeGB": "[int(parameters('dataDiskSize'))]",
                        "managedDisk": {
                            "storageAccountType": "[parameters('diskType')]"
                        },
                        "lun": 0
                    }  
                ]                  
        },
        "dataDisksUnManaged": {
            "type": "array",
            "defaultValue": [
                {
                    "name": "[concat(parameters('virtualMachineName'),'_undatadisk')]",
                    "lun": 0,
                    "caching": "ReadWrite",
                    "createOption": "Empty",
                    "diskSizeGB": "[int(parameters('dataDiskSize'))]",
                    "vhd": {
                      "uri": "[concat(parameters('storageContainerUri'), parameters('virtualMachineName'), '-datadisk1.vhd')]"
                    }
                }
            ]                    
        }
    },
    "variables": {
        "resourceGroup": "[parameters('resourceGroup')]",
        "vmTags": "[concat(parameters('resourcePrefix'), parameters('resourceSuffix'))]",
        "virtualMachineName": "parameters('virtualMachineName')",
        "networkInterfaceName": "[concat(parameters('resourcePrefix'), parameters('resourceSuffix'), '-nic')]",
        "networkSecurityGroupName": "[concat(parameters('resourcePrefix'), parameters('resourceSuffix'), '-nsg')]",
        "publicIpAddressName": "[concat(parameters('resourcePrefix'), parameters('resourceSuffix'), '-pip')]",
        "storageAccountName": "parameters('storageAccountName')",
        "osProfileWinParams": {
            "computerName": "[variables('virtualMachineName')]",
            "adminUsername": "[parameters('adminUsername')]",
            "adminPassword": "[parameters('adminPassword')]",
            "windowsConfiguration": {
                "enableAutomaticUpdates": true,
                "timeZone": "[parameters('vmTimeZone')]"
            }
        },
        "osProfileLinParams": {
            "computerName": "[variables('virtualMachineName')]",
            "adminUsername": "[parameters('adminUsername')]",
            "adminPassword": "[parameters('adminPassword')]",
            "linuxConfiguration": {
                "disablePasswordAuthentication": false
            }
        },
        "virtualNetworkName": "[concat(parameters('resourcePrefix'), parameters('resourceSuffix'), '-vnet')]",
        "subnetName": "[concat(parameters('resourcePrefix'), parameters('resourceSuffix'), '-subnet')]",
        "extvnetId": "[resourceId(parameters('existingVnetResourceGroupName'),'Microsoft.Network/virtualNetworks', parameters('existingVnetName'))]",
        "extsubnetRef": "[concat(variables('extvnetId'), '/subnets/', parameters('existingVirtualNetworkSubnet'))]",
        "vnetId": "[resourceId(variables('resourceGroup'),'Microsoft.Network/virtualNetworks', variables('virtualNetworkName'))]",
        "subnetRef": "[concat(variables('vnetId'), '/subnets/', variables('subnetName'))]",
        "OSDiskName": "[concat(toLower(variables('virtualMachineName')),'OSDisk')]",
        "storageContainerUri": "[parameters('storageContainerUri')]",
        "dataDiskName": "[concat(toLower(variables('virtualMachineName')),'datadisk')]",
        "vmExtension": "[concat(parameters('resourcePrefix'), parameters('resourceSuffix'), '-vmext')]",
        "dataDiskSize": "[parameters('dataDiskSize')]",
        "scriptFileName": "[last(split(parameters('scriptFileURI'),'/'))]",
        "publicIpAddressAllocation": {
            "id": "[resourceId(variables('resourceGroup'),'Microsoft.Network/publicIpAddresses', variables('publicIpAddressName'))]"
        },
        "availabilitySetName": "[concat(parameters('resourcePrefix'), parameters('resourceSuffix'), '-avset')]",
        "availabilitySetId": {
            "id": "[resourceId('Microsoft.Compute/availabilitySets', variables('availabilitySetName'))]"
        },
        "osDiskUnManaged": {
            "createOption": "FromImage",
            "vhd": {
                "uri": "[concat(variables('storageContainerUri'), variables('virtualMachineName'), '.vhd')]"
            },
            "name": "[variables('virtualMachineName')]"
        },
        "osDiskManaged": {
            "name": "[variables('OSDiskName')]",
            "caching": "ReadWrite",
            "createOption": "FromImage",
            "managedDisk": {
                "storageAccountType": "[parameters('diskType')]"
            }
        },                              
        "cmdToExecute": "[concat(parameters('cmdExecutePrefix'), ' ', variables('scriptFileName'), ' ', parameters('scriptFileParams'))]"
    },
    "resources": [
        {
            "name": "[variables('virtualMachineName')]",
            "type": "Microsoft.Compute/virtualMachines",
            "apiVersion": "2017-12-01",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[concat('Microsoft.Network/networkInterfaces/', variables('networkInterfaceName'))]"
            ],
            "properties": {
                "osProfile": "[if(equals(parameters('osType'), 'Windows'), variables('osProfileWinParams'), variables('osProfileLinParams'))]",
                "hardwareProfile": {
                    "vmSize": "[parameters('virtualMachineSize')]"
                },
                "availabilitySet": "[if(equals(parameters('enableAvailabilitySet'), 'Yes'), variables('availabilitySetId'), json('null'))]",
                "storageProfile": {
                    "osDisk": "[if(equals(parameters('ManagedDisks'), 'Yes'), variables('osDiskManaged'), variables('osDiskUnManaged'))]",
                    "imageReference": {
                        "publisher": "[parameters('vmImagePublisher')]",
                        "offer": "[parameters('vmImageOffer')]",
                        "sku": "[parameters('vmImageSKU')]",
                        "version": "[parameters('vmImageVersion')]"
                    },
                    "dataDisks": "[if(equals(parameters('ManagedDisks'), 'Yes'), parameters('dataDisksManaged'), parameters('dataDisksUnManaged'))]"
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('networkInterfaceName'))]"
                        }
                    ]
                }
            }
        },
        {
            "apiVersion": "2018-07-01",
            "type": "Microsoft.Storage/storageAccounts",
            "condition": "[equals(parameters('ManagedDisks'), 'No')]",
            "name": "[variables('storageAccountName')]",
            "location": "[parameters('location')]",
            "properties": {},
            "kind": "[parameters('storageAccountKind')]",
            "sku": {
                "name": "[parameters('storageAccountType')]"
            }
        },
        {
            "apiVersion": "2015-06-15",
            "type": "Microsoft.Compute/virtualMachines/extensions",
            "name": "[concat(variables('virtualMachineName'), '/', variables('vmExtension'))]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[concat('Microsoft.Compute/virtualMachines/', variables('virtualMachineName'))]"
            ],
            "properties": {
                "publisher": "[parameters('extnPublisher')]",
                "type": "[parameters('extnType')]",
                "typeHandlerVersion": "[parameters('extnTypeVersion')]",
                "autoUpgradeMinorVersion": true,
                "settings": {
                    "fileUris": [
                        "[parameters('scriptFileURI')]"
                    ]
                },
                "protectedSettings": {
                    "commandToExecute": "[variables('cmdToExecute')]"
                }
            }
        },
        {
            "condition": "[equals(parameters('existingNetwork'), 'false')]",
            "name": "[variables('virtualNetworkName')]",
            "type": "Microsoft.Network/virtualNetworks",
            "apiVersion": "2018-02-01",
            "location": "[parameters('location')]",
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "[parameters('addressPrefix')]"
                    ]
                },
                "subnets": [
                    {
                        "name": "[variables('subnetName')]",
                        "properties": {
                            "addressPrefix": "[parameters('subnetPrefix')]"
                        }
                    }
                ]
            }
        },
        {
            "name": "[variables('networkInterfaceName')]",
            "type": "Microsoft.Network/networkInterfaces",
            "apiVersion": "2018-10-01",
            "location": "[parameters('location')]",
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "subnet": {
                                "id": "[if(equals(parameters('existingNetwork'), 'false'), variables('subnetRef'), variables('extsubnetRef'))]"
                            },
                            "privateIPAllocationMethod": "Dynamic",
                            "publicIpAddress": "[if(equals(parameters('enablePublicIP'), 'Yes'), variables('publicIpAddressAllocation'), json('null'))]"
                        }
                    }
                ],
                "networkSecurityGroup": {
                    "id": "[resourceId(variables('resourceGroup'), 'Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName'))]"
                }
            },
            "dependsOn": [
                "[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]",
                "[concat('Microsoft.Network/publicIpAddresses/', variables('publicIpAddressName'))]",
                "[concat('Microsoft.Network/networkSecurityGroups/', variables('networkSecurityGroupName'))]"
            ]
        },
        {
            "condition": "[equals(parameters('enablePublicIP'), 'Yes')]",
            "name": "[variables('publicIpAddressName')]",
            "type": "Microsoft.Network/publicIPAddresses",
            "apiVersion": "2017-08-01",
            "location": "[parameters('location')]",
            "properties": {
                "publicIPAllocationMethod": "[parameters('publicIpAddressType')]"
            },
            "sku": {
                "name": "[parameters('publicIpAddressSku')]"
            }
        },
        {
            "condition": "[equals(parameters('enableAvailabilitySet'), 'Yes')]",
            "type": "Microsoft.Compute/availabilitySets",
            "apiVersion": "2017-03-30",
            "name": "[variables('availabilitySetName')]",
            "location": "[resourceGroup().location]",
            "properties": {
                "platformFaultDomainCount": 2,
                "platformUpdateDomainCount": 3
            },
            "sku": {
                "name": "[if(equals(parameters('ManagedDisks'), 'Yes'), 'Aligned', 'Classic')]"
            }
        },
        {
            "name": "[variables('networkSecurityGroupName')]",
            "type": "Microsoft.Network/networkSecurityGroups",
            "apiVersion": "2018-01-01",
            "location": "[parameters('location')]",
            "properties": "[parameters('vmNetworkSecurityRules')]"
        }
    ],
    "outputs": {
        "UserName": {
            "type": "string",
            "value": "[parameters('adminUsername')]"
        },
        "MachineName": {
            "type": "string",
            "value": "[variables('virtualMachineName')]"
        }
    }
}